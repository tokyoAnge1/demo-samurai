{"version":3,"file":"static/js/797.0b836f3c.chunk.js","mappings":"mMA+BMA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAbN,SAAC,GAA0B,IAAzBE,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,MAC7B,OACI,kBAAMC,SAAUF,EAAhB,WACHG,EAAAA,EAAAA,GAAY,CAACC,EAAAA,GAAUC,EAAAA,IAAc,QAAQ,QAAQC,EAAAA,IACrDH,EAAAA,EAAAA,GAAY,CAACC,EAAAA,GAAUC,EAAAA,IAAc,WAAW,WAAWC,EAAAA,IAC3DH,EAAAA,EAAAA,GAAY,KAAM,KAAK,aAAaG,EAAAA,EAAa,CAACC,KAAK,YAAa,eACrEN,IAAS,uBAAIA,KACb,0BACI,8CAWR,WAAeO,EAAAA,EAAAA,KALS,SAACC,GACrB,MAAM,CACFC,OAAOD,EAAME,KAAKD,UAGc,CAACE,MAAAA,EAAAA,GAAOT,YAAAA,EAAAA,GAAhD,EA7Bc,SAAC,GAAkC,IAAjCS,EAAgC,EAAhCA,MAAOF,EAAyB,EAAzBA,OAAQP,EAAiB,EAAjBA,YAI3B,OAAGO,GAAe,SAAC,KAAD,CAAUG,GAAG,cACxB,4BACP,mCACC,SAAChB,EAAD,CAAgBM,YAAcA,EAAaD,SAN3B,SAACY,GACdF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,sB,0FCT1D,GAAgB,WAAa,mCAAmC,YAAc,oCAAoC,MAAQ,+B,SCAlHC,EAAa,SAAC,GAAyC,IAAD,IAAvCC,KAAQC,EAA+B,EAA/BA,QAASnB,EAAsB,EAAtBA,MAAQoB,EAAc,EAAdA,SACtCC,EAAYF,GAAWnB,EAC9B,OACI,iBAAKsB,UAAWD,EAAYE,EAAAA,YAAgBA,EAAAA,aAA5C,UACIH,EACAC,GAAY,iBAAMC,UAAWC,EAAAA,MAAjB,SAA2BvB,IAAgB,OAGnDK,EAAc,SAACmB,GAC5B,OAAO,SAACP,EAAD,CAAYC,KAAOM,EAAMN,KAAzB,UAA+B,oCAAWM,EAAMC,OAAWD,OACrDE,EAAgB,SAACF,GAC9B,OAAO,SAACP,EAAD,CAAYC,KAAOM,EAAMN,KAAzB,UAA+B,uCAAcM,EAAMC,OAAWD,Q,sDCNvE,IALoB,SAACG,EAAYC,EAAaC,EAAMC,GAAhC,IAA2CN,EAA3C,uDAAkD,GAAIO,EAAtD,uDAA6D,GAA7D,OAChB,4BACE,SAAC,KAAD,QAAOC,SAAUL,EAAWC,YAAaA,EAAaC,KAAMA,EAAMI,UAAWH,GAAeN,IAD9F,IACyGO,O,sGCHtG,IAAM5B,EAAW,SAAA+B,GACnB,IAAGA,EACH,MAAO,4BACNC,EAAmB,SAAAC,GACrB,OAAO,SAAAF,GACH,GAAGA,GAASA,EAAMG,OAASD,EAAK,MAAM,yBAAN,OAAgCA,KAI3DE,EAAcH,EAAiB,IAC/B/B,EAAc+B,EAAiB","sources":["components/Login/Login.jsx","webpack://tokyo/./src/components/commons/CustomTextarea.module.css?70e5","components/commons/CustomTextarea.jsx","components/commons/helpers/createField.js","utils/validators/validators.js"],"sourcesContent":["import React from \"react\";\r\nimport { CustomInput } from \"../commons/CustomTextarea\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {required, maxLength50} from '../../utils/validators/validators'\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport createField from \"../commons/helpers/createField\";\r\nconst Login = ({login, isAuth, createField}) => {\r\n    const onSubmit = (formData) =>{\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if(isAuth){return <Navigate to='/profile'/>}\r\n    return <div>\r\n    <h3>LOGIN</h3>\r\n     <LoginReduxForm createField= {createField} onSubmit={onSubmit}/>\r\n    </div> \r\n}\r\nconst LoginForm =({handleSubmit, error}) =>{\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n    {createField([required, maxLength50], \"login\",\"email\",CustomInput)}\r\n    {createField([required, maxLength50], \"password\",\"password\",CustomInput)}\r\n    {createField(null, null,\"rememberMe\",CustomInput, {type:'checkbox'}, 'Remember me')}\r\n   {error && <a>{error}</a>}\r\n    <div>\r\n        <button>Login</button>\r\n    </div>\r\n</form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm) //form is a unique name именно той которую оборачиваю\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        isAuth:state.auth.isAuth,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {login, createField})(Login);","// extracted by mini-css-extract-plugin\nexport default {\"errorstyle\":\"CustomTextarea_errorstyle__Yjhty\",\"normalstyle\":\"CustomTextarea_normalstyle__teZwA\",\"error\":\"CustomTextarea_error__yRhZl\"};","import s from './CustomTextarea.module.css'\r\n  const CustomForm = ({meta : {touched, error}, children}) => {\r\n    const showError = touched && error\r\n   return(\r\n       <div className={showError ? s.errorstyle2 : s.normalstyle2}>\r\n          {children}\r\n          {showError ? <span className={s.error}>{error}</span> : ''}\r\n       </div> \r\n   )}\r\n  export const CustomInput = (props) =>{\r\n  return <CustomForm meta ={props.meta}><input {...props.input} {...props}/></CustomForm>}\r\n  export const CustomTextarea =(props)=>{\r\n  return <CustomForm meta ={props.meta}><textarea {...props.input} {...props}/></CustomForm>}","import { Field} from \"redux-form\";\r\nconst createField = (validators, placeholder, name, Component, props= {}, text = '') => (\r\n    <div>\r\n      <Field validate={validators}placeholder={placeholder} name={name} component={Component} {...props} /> {text}\r\n    </div>\r\n)\r\nexport default createField","export const required = value =>{\r\n     if(value) return undefined\r\n     return \"Error, Field is required\"}\r\nconst maxLengthCreator = max => {\r\n    return value =>{\r\n        if(value && value.length > max) return `Error, max symbols is ${max}`\r\n        return undefined\r\n    }\r\n}\r\nexport const maxLength15 = maxLengthCreator(15)\r\nexport const maxLength50 = maxLengthCreator(50)"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","maxLength50","CustomInput","type","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe","CustomForm","meta","touched","children","showError","className","s","props","input","CustomTextarea","validators","placeholder","name","Component","text","validate","component","value","maxLengthCreator","max","length","maxLength15"],"sourceRoot":""}